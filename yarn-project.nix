# This file is generated by running "yarn install" inside your project.
# Manual changes might be lost - proceed with caution!

{ lib, stdenv, nodejs, git, cacert, fetchurl, writeShellScript, writeShellScriptBin }:
{ src, overrideAttrs ? null, ... } @ args:

let

  cacheFolder = ".yarn/cache";

  # Call overrideAttrs on a derivation if a function is provided.
  optionalOverride = fn: drv:
    if fn == null then drv else drv.overrideAttrs fn;

  # Simple stub that provides the global yarn command.
  yarn = writeShellScriptBin "yarn" ''
    exec '${nodejs}/bin/node' '${./.yarn/releases/yarn-3.3.1.cjs}' "$@"
  '';

  # Common attributes between Yarn derivations.
  drvCommon = {
    # Make sure the build uses the right Node.js version everywhere.
    buildInputs = [ nodejs yarn ];
    # Tell node-gyp to use the provided Node.js headers for native code builds.
    npm_config_nodedir = nodejs;
  };

  # Comman variables that we set in a Nix build, but not in a Nix shell.
  buildVars = ''
    # Make Yarn produce friendlier logging for automated builds.
    export CI=1
    # Tell node-pre-gyp to never fetch binaries / always build from source.
    export npm_config_build_from_source=true
    # Disable Nixify plugin to save on some unnecessary processing.
    export yarn_enable_nixify=false
  '';

  # Create derivations for fetching dependencies.
  cacheDrvs = let
    builder = writeShellScript "yarn-cache-builder" ''
      source $stdenv/setup
      cd "$src"
      ${buildVars}
      HOME="$TMP" yarn_cache_folder="$TMP" \
        yarn nixify fetch-one $locator
      # Because we change the cache dir, Yarn may generate a different name.
      mv "$TMP/$(sed 's/-[^-]*\.[^-]*$//' <<< "$outputFilename")"-* $out
    '';
  in lib.mapAttrs (locator: { filename, sha512 }: stdenv.mkDerivation {
    inherit src builder locator;
    name = lib.strings.sanitizeDerivationName locator;
    buildInputs = [ yarn git cacert ];
    outputFilename = filename;
    outputHashMode = "flat";
    outputHashAlgo = "sha512";
    outputHash = sha512;
  }) cacheEntries;

  # Create a shell snippet to copy dependencies from a list of derivations.
  mkCacheBuilderForDrvs = drvs:
    writeShellScript "collect-yarn-cache" (lib.concatMapStrings (drv: ''
      cp ${drv} '${drv.outputFilename}'
    '') drvs);


  # Main project derivation.
  project = stdenv.mkDerivation (drvCommon // {
    inherit src;
    name = "microsoft-store-sync";

    configurePhase = ''
      ${buildVars}

      # Copy over the Yarn cache.
      rm -fr '${cacheFolder}'
      mkdir -p '${cacheFolder}'
      pushd '${cacheFolder}' > /dev/null
      source ${mkCacheBuilderForDrvs (lib.attrValues cacheDrvs)}
      popd > /dev/null

      # Yarn may need a writable home directory.
      export yarn_global_folder="$TMP"

      # Some node-gyp calls may call out to npm, which could fail due to an
      # read-only home dir.
      export HOME="$TMP"

      # running preConfigure after the cache is populated allows for
      # preConfigure to contain substituteInPlace for dependencies as well as the
      # main project. This is necessary for native bindings that maybe have
      # hardcoded values.
      runHook preConfigure



      # Run normal Yarn install to complete dependency installation.
      yarn install --immutable --immutable-cache

      runHook postConfigure
    '';

    buildPhase = ''
      runHook preBuild
      runHook postBuild
    '';

    installPhase = ''
      runHook preInstall

      mkdir -p "$out/libexec/$name" "$out/bin"

      # Move the package contents to the output directory.
      # - If the package.json has a `files` field, only files matching those patterns are copied
      # - Otherwise all files are copied
      yarn pack --out package.tgz
      tar xzvf package.tgz --directory "$out/libexec/$name" --strip-components=1

      cp .yarnrc* 'yarn.lock' "$out/libexec/$name"
      cp --recursive .yarn "$out/libexec/$name"

      # If the project uses the node-modules linker, then
      # include the node_modules folder in the package.
      if [ -d node_modules ]; then
        cp --recursive node_modules "$out/libexec/$name"
      else
        # Otherwise, assume PnP. Copy the loader into the package.
        cp .pnp.* "$out/libexec/$name"
      fi

      cd "$out/libexec/$name"

      # Invoke a plugin internal command to setup binaries.
      yarn nixify install-bin $out/bin

      # A package with node_modules doesn't need the cache
      if [ -d node_modules ]; then
        yarn cache clean
      fi

      runHook postInstall
    '';

    passthru = {
      inherit nodejs;
      yarn-freestanding = yarn;
      yarn = writeShellScriptBin "yarn" ''
        exec '${yarn}/bin/yarn' --cwd '${project}/libexec/${project.name}' "$@"
      '';
    };
  });

cacheEntries = {
"@cspotcode/source-map-consumer@npm:0.8.0" = { filename = "@cspotcode-source-map-consumer-npm-0.8.0-1f37e9e72b-c0c16ca3d2.zip"; sha512 = "c0c16ca3d2f58898f1bd74c4f41a189dbcc202e642e60e489cbcc2e52419c4e89bdead02c886a12fb13ea37798ede9e562b2321df997ebc210ae9bd881561b4e"; };
"@cspotcode/source-map-support@npm:0.7.0" = { filename = "@cspotcode-source-map-support-npm-0.7.0-456c3ea2ce-9faddda775.zip"; sha512 = "9faddda7757cd778b5fd6812137b2cc265810043680d6399acc20441668fafcdc874053be9dccd0d9110087287bfad27eb3bf342f72bceca9aa9059f5d0c4be8"; };
"@tsconfig/node10@npm:1.0.8" = { filename = "@tsconfig-node10-npm-1.0.8-90a8cce25d-b8d5fffbc6.zip"; sha512 = "b8d5fffbc6b17ef64ef74f7fdbccee02a809a063ade785c3648dae59406bc207f70ea2c4296f92749b33019fa36a5ae716e42e49cc7f1bbf0fd147be0d6b970a"; };
"@tsconfig/node12@npm:1.0.9" = { filename = "@tsconfig-node12-npm-1.0.9-780563856d-a01b2400ab.zip"; sha512 = "a01b2400ab3582b86b589c6d31dcd0c0656f333adecde85d6d7d4086adb059808b82692380bb169546d189bf771ae21d02544a75b57bd6da4a5dd95f8567bec9"; };
"@tsconfig/node14@npm:1.0.1" = { filename = "@tsconfig-node14-npm-1.0.1-3ecac58e68-976345e896.zip"; sha512 = "976345e896c0f059867f94f8d0f6ddb8b1844fb62bf36b727de8a9a68f024857e5db97ed51d3325e23e0616a5e48c034ff51a8d595b3fe7e955f3587540489be"; };
"@tsconfig/node16@npm:1.0.2" = { filename = "@tsconfig-node16-npm-1.0.2-1f43ab567a-ca94d36397.zip"; sha512 = "ca94d3639714672bbfd55f03521d3f56bb6a25479bd425da81faf21f13e1e9d15f40f97377dedbbf477a5841c5b0c8f4cd1b391f33553d750b9202c54c2c07aa"; };
"@types/node@npm:17.0.31" = { filename = "@types-node-npm-17.0.31-d8d26aa013-704618350f.zip"; sha512 = "704618350f8420d5c47db0f7778398e821b7724369946f5c441a7e6b9343295553936400eb8309f0b07d5e39c240988ab3456b983712ca86265dabc9aee4ad3d"; };
"@types/yaml@npm:1.9.7" = { filename = "@types-yaml-npm-1.9.7-a7e2bbc474-0cdbf1857d.zip"; sha512 = "0cdbf1857d89ade9b7d00aa09f2e0a2a56b707870b1dc1387f5be5398cd60c3f92bb32a543471147d2eaf38919f921391e0ade34fc9e1e022c7d67fb1a0da73c"; };
"acorn-walk@npm:8.2.0" = { filename = "acorn-walk-npm-8.2.0-2f2cac3177-1715e76c01.zip"; sha512 = "1715e76c01dd7b2d4ca472f9c58968516a4899378a63ad5b6c2d668bba8da21a71976c14ec5f5b75f887b6317c4ae0b897ab141c831d741dc76024d8745f1ad1"; };
"acorn@npm:8.7.1" = { filename = "acorn-npm-8.7.1-7c7a019990-aca0aabf98.zip"; sha512 = "aca0aabf98826717920ac2583fdcad0a6fbe4e583fdb6e843af2594e907455aeafe30b1e14f1757cd83ce1776773cf8296ffc3a4acf13f0bd3dfebcf1db6ae80"; };
"arg@npm:4.1.3" = { filename = "arg-npm-4.1.3-1748b966a8-544af8dd3f.zip"; sha512 = "544af8dd3f60546d3e4aff084d451b96961d2267d668670199692f8d054f0415d86fc5497d0e641e91546f0aa920e7c29e5250e99fc89f5552a34b5d93b77f43"; };
"boolbase@npm:1.0.0" = { filename = "boolbase-npm-1.0.0-965fe9af6d-3e25c80ef6.zip"; sha512 = "3e25c80ef626c3a3487c73dbfc70ac322ec830666c9ad915d11b701142fab25ec1e63eff2c450c74347acfd2de854ccde865cd79ef4db1683f7c7b046ea43bb0"; };
"cheerio-select@npm:2.1.0" = { filename = "cheerio-select-npm-2.1.0-e92bc2f296-843d6d4799.zip"; sha512 = "843d6d479922f28a6c5342c935aff1347491156814de63c585a6eb73baf7bb4185c1b4383a1195dca0f12e3946d737c7763bcef0b9544c515d905c5c44c5308b"; };
"cheerio@npm:1.0.0-rc.12" = { filename = "cheerio-npm-1.0.0-rc.12-6785a97c2a-5d4c1b7a53.zip"; sha512 = "5d4c1b7a53cf22d3a2eddc0aff70cf23cbb30d01a4c79013e703a012475c02461aa1fcd99127e8d83a02216386ed6942b2c8103845fd0812300dd199e6e7e054"; };
"create-require@npm:1.1.1" = { filename = "create-require-npm-1.1.1-839884ca2e-a9a1503d43.zip"; sha512 = "a9a1503d4390d8b59ad86f4607de7870b39cad43d929813599a23714831e81c520bddf61bcdd1f8e30f05fd3a2b71ae8538e946eb2786dc65c2bbc520f692eff"; };
"css-select@npm:5.1.0" = { filename = "css-select-npm-5.1.0-9365a79de5-2772c049b1.zip"; sha512 = "2772c049b188d3b8a8159907192e926e11824aea525b8282981f72ba3f349cf9ecd523fdf7734875ee2cb772246c22117fc062da105b6d59afe8dcd5c99c9bda"; };
"css-what@npm:6.1.0" = { filename = "css-what-npm-6.1.0-57f751efbb-b975e547e1.zip"; sha512 = "b975e547e1e90b79625918f84e67db5d33d896e6de846c9b584094e529f0c63e2ab85ee33b9daffd05bff3a146a1916bec664e18bb76dd5f66cbff9fc13b2bbe"; };
"diff@npm:4.0.2" = { filename = "diff-npm-4.0.2-73133c7102-f2c09b0ce4.zip"; sha512 = "f2c09b0ce4e6b301c221addd83bf3f454c0bc00caa3dd837cf6c127d6edf7223aa2bbe3b688feea110b7f262adbfc845b757c44c8a9f8c0c5b15d8fa9ce9d20d"; };
"dom-serializer@npm:2.0.0" = { filename = "dom-serializer-npm-2.0.0-378ebc7200-cd1810544f.zip"; sha512 = "cd1810544fd8cdfbd51fa2c0c1128ec3a13ba92f14e61b7650b5de421b88205fd2e3f0cc6ace82f13334114addb90ed1c2f23074a51770a8e9c1273acbc7f3e6"; };
"domelementtype@npm:2.3.0" = { filename = "domelementtype-npm-2.3.0-02de7cbfba-ee837a318f.zip"; sha512 = "ee837a318ff702622f383409d1f5b25dd1024b692ef64d3096ff702e26339f8e345820f29a68bcdcea8cfee3531776b3382651232fbeae95612d6f0a75efb4f6"; };
"domhandler@npm:5.0.3" = { filename = "domhandler-npm-5.0.3-3ede73dc10-0f58f4a6af.zip"; sha512 = "0f58f4a6af63e6f3a4320aa446d28b5790a009018707bce2859dcb1d21144c7876482b5188395a188dfa974238c019e0a1e610d2fc269a12b2c192ea2b0b131c"; };
"domutils@npm:3.0.1" = { filename = "domutils-npm-3.0.1-7937818218-23aa7a8405.zip"; sha512 = "23aa7a840572d395220e173cb6263b0d028596e3950100520870a125af33ff819e6f609e1606d6f7d73bd9e7feb03bb404286e57a39063b5384c62b724d987b3"; };
"entities@npm:4.3.1" = { filename = "entities-npm-4.3.1-3a76d89ee3-e8f6d2bac2.zip"; sha512 = "e8f6d2bac238494b2355e90551893882d2675142be7e7bdfcb15248ed0652a630678ba0e3a8dc750693e736cb6011f504c27dabeb4cd3330560092e88b105090"; };
"htmlparser2@npm:8.0.1" = { filename = "htmlparser2-npm-8.0.1-b432299617-06d5c71e83.zip"; sha512 = "06d5c71e8313597722bc429ae2a7a8333d77bd3ab07ccb916628384b37332027b047f8619448d8f4a3312b6609c6ea3302a4e77435d859e9e686999e6699ca39"; };
"libaria2-ts@npm:1.0.708" = { filename = "libaria2-ts-npm-1.0.708-1f2d7808a9-3a2e1ec7a7.zip"; sha512 = "3a2e1ec7a75c18b06806c841b105aa0ee79dce8a007158b4ed444d52d2f3af286352f59c81dd7846f89f161be7c781dece1a75bda9f6f3e28c8900f000858ebc"; };
"make-error@npm:1.3.6" = { filename = "make-error-npm-1.3.6-ccb85d9458-b86e5e0e25.zip"; sha512 = "b86e5e0e25f7f777b77fabd8e2cbf15737972869d852a22b7e73c17623928fccb826d8e46b9951501d3f20e51ad74ba8c59ed584f610526a48f8ccf88aaec402"; };
"nth-check@npm:2.1.1" = { filename = "nth-check-npm-2.1.1-f97afc8169-5afc3dafcd.zip"; sha512 = "5afc3dafcd1573b08877ca8e6148c52abd565f1d06b1eb08caf982e3fa289a82f2cae697ffb55b5021e146d60443f1590a5d6b944844e944714a5b549675bcd3"; };
"parse5-htmlparser2-tree-adapter@npm:7.0.0" = { filename = "parse5-htmlparser2-tree-adapter-npm-7.0.0-38e1b3a974-fc5d01e077.zip"; sha512 = "fc5d01e07733142a1baf81de5c2a9c41426c04b7ab29dd218acb80cd34a63177c90aff4a4aee66cf9f1d0aeecff1389adb7452ad6f8af0a5888e3e9ad6ef733d"; };
"parse5@npm:7.0.0" = { filename = "parse5-npm-7.0.0-3158a72394-7da5d61cc1.zip"; sha512 = "7da5d61cc18eb36ffa71fc861e65cbfd1f23d96483a6631254e627be667dbc9c93ac0b0e6cb17a13a2e4033dab19bfb2f76f38e5936cfb57240ed49036a83fcc"; };
"sleep-promise@npm:9.1.0" = { filename = "sleep-promise-npm-9.1.0-d83e95aee1-a93359c18d.zip"; sha512 = "a93359c18d2e4d586f2ecd4575cbdbc92bcbd9d387bd4bca249892abb512ca4e80075f67e53ec1279ea4555e8a1f6dc9df9e90f8aa71178ad943e9ba1f27debb"; };
"ts-node@npm:10.7.0" = { filename = "ts-node-npm-10.7.0-ef39b1d45e-2a379e43f7.zip"; sha512 = "2a379e43f7478d0b79e1e63af91fe222d83857727957df4bd3bdf3c0a884de5097b12feb9bbf530074526b8874c0338b0e6328cf334f3a5e2c49c71e837273f7"; };
"tsc@npm:2.0.4" = { filename = "tsc-npm-2.0.4-e331b066cb-50b1024088.zip"; sha512 = "50b10240887424c66454687f0fca4e319713b35cb44f0dab228719eb4dd757251f83c3d79e60d29dfbe90c2d6f1272f793b83e75a9fca2c622b4213ad3eb8cb1"; };
"typescript@npm:4.6.4" = { filename = "typescript-npm-4.6.4-114dfa5f7e-e7bfcc39cd.zip"; sha512 = "e7bfcc39cd4571a63a54e5ea21f16b8445268b9900bf55aee0e02ad981be576acc140eba24f1af5e3c1457767c96cea6d12861768fb386cf3ffb34013718631a"; };
"typescript@patch:typescript@npm%3A4.6.4#~builtin<compat/typescript>::version=4.6.4&hash=5d3a66" = { filename = "typescript-patch-9d18892098-1cb434fbc6.zip"; sha512 = "1cb434fbc637d347be90e3a0c6cd05e33c38f941713c8786d3031faf1842c2c148ba91d2fac01e7276b0ae3249b8633f1660e32686cc7a8c6a8fd5361dc52c66"; };
"v8-compile-cache-lib@npm:3.0.1" = { filename = "v8-compile-cache-lib-npm-3.0.1-4886071ece-78089ad549.zip"; sha512 = "78089ad549e21bcdbfca10c08850022b22024cdcc2da9b168bcf5a73a6ed7bf01a9cebb9eac28e03cd23a684d81e0502797e88f3ccd27a32aeab1cfc44c39da0"; };
"ws@npm:7.5.9" = { filename = "ws-npm-7.5.9-26f12a5ed6-c3c100a181.zip"; sha512 = "c3c100a181b731f40b7f2fddf004aa023f79d64f489706a28bc23ff88e87f6a64b3c6651fbec3a84a53960b75159574d7a7385709847a62ddb7ad6af76f49138"; };
"yaml@npm:2.1.1" = { filename = "yaml-npm-2.1.1-e717f9b915-f48bb20991.zip"; sha512 = "f48bb209918aa57cfaf78ef6448d1a1f8187f45c746f933268b7023dc59e5456004611879126c9bb5ea55b0a2b1c2b392dfde436931ece0c703a3d754562bb96"; };
"yn@npm:3.1.1" = { filename = "yn-npm-3.1.1-8ad4259784-2c487b0e14.zip"; sha512 = "2c487b0e149e746ef48cda9f8bad10fc83693cd69d7f9dcd8be4214e985de33a29c9e24f3c0d6bcf2288427040a8947406ab27f7af67ee9456e6b84854f02dd6"; };
};

in optionalOverride overrideAttrs project
